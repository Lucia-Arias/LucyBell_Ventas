@page "/Api/Productos/agregar" 
@inject IHttpServicio http
@inject NavigationManager navigationManager

<h3> Agregar Producto </h3>

@if (!string.IsNullOrEmpty(mensajeError))
{
    <div class="alert alert-danger" role="alert">
        @mensajeError
    </div>
}

<EditForm Model="producto" OnValidSubmit="Guardar">
	<DataAnnotationsValidator />

	<div class="form-group">
		<label>Categoría</label>
		<div>
			<select class="form-control" @bind="producto.CategoriaId">
				<option value="">Seleccione una categoría</option>
				@foreach (var cat in categorias)
				{
					<option value="@cat.Id">@cat.Nombre_Cat</option>
				}
			</select>
			<ValidationMessage For="@(() => producto.CategoriaId)" />
		</div>
	</div>
	
	<div class="form-group">
		<label>Nombre Producto</label>
		<div>
			<InputText class="form-control" @bind-Value="@producto.Nombre" /> 
			<ValidationMessage For="@(() => producto.Nombre)" /> 
		</div>
	</div>

	<div class="form-group">
		<label>Precio</label>
		<div>
			<InputNumber class="form-control" @bind-Value="@producto.Precio" /> 
			<ValidationMessage For="@(() => producto.Precio)" /> 
		</div>
	</div>

	<div class="form-group">
		<label>Stock</label>
		<div>
			<InputNumber class="form-control" @bind-Value="@producto.Stock" /> 
			<ValidationMessage For="@(() => producto.Stock)" /> 
		</div>
	</div>

	<br/>
	<button class="btn btn-success" type="submit">Aceptar</button>
	<button class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
</EditForm>



@code {
	private Producto producto = new Producto();
	private List<Categoria> categorias = new List<Categoria>();

	private string mensajeError;

	protected override async Task OnInitializedAsync()
	{
		await CargarCategorias();
	}
	
	private async Task CargarCategorias()
	{
		var respuesta = await http.Get<List<Categoria>>("Api/Categorias");
		if (!respuesta.Error)
		{
			categorias = respuesta.Respuesta;
		}
	}

	private async Task Guardar()
	{
		var HttpRespuesta = await http.Post<Producto>("Api/Productos", producto);
		if (!HttpRespuesta.Error)
		{
			navigationManager.NavigateTo("/Api/Productos");
		}
		else
		{
			mensajeError = "Error al guardar el producto: " + await HttpRespuesta.HttpResponseMessage.Content.ReadAsStringAsync();
		}
	}

	private void Cancelar()
	{
		navigationManager.NavigateTo("/Api/Productos");
	}
}
